export class BentTool {
    map = {
        'a': 'ą',
        'b': 'ҍ',
        'c': 'ç',
        'd': 'ժ',
        'e': 'ҽ',
        'f': 'ƒ',
        'g': 'ց',
        'h': 'հ',
        'i': 'ì',
        'j': 'ʝ',
        'k': 'ҟ',
        'l': 'Ӏ',
        'm': 'ʍ',
        'n': 'ղ',
        'o': 'օ',
        'p': 'ք',
        'q': 'զ',
        'r': 'ɾ',
        's': 'ʂ',
        't': 'է',
        'u': 'մ',
        'v': 'ѵ',
        'w': 'ա',
        'x': '×',
        'y': 'վ',
        'z': 'Հ',
        'A': 'Ⱥ',
        'B': 'β',
        'C': '↻',
        'D': 'Ꭰ',
        'E': 'Ɛ',
        'F': 'Ƒ',
        'G': 'Ɠ',
        'H': 'Ƕ',
        'I': 'į',
        'J': 'ل',
        'K': 'Ҡ',
        'L': 'Ꝉ',
        'M': 'Ɱ',
        'N': 'ហ',
        'O': 'ට',
        'P': 'φ',
        'Q': 'Ҩ',
        'R': 'འ',
        'S': 'Ϛ',
        'T': 'Ͳ',
        'U': 'Ա',
        'V': 'Ỽ',
        'W': 'చ',
        'X': 'ჯ',
        'Y': 'Ӌ',
        'Z': 'ɀ',
        '0': '⊘',
        '1': '������',
        '2': 'ϩ',
        '3': 'Ӡ',
        '4': '५',
        '5': 'Ƽ',
        '6': 'Ϭ',
        '7': '7',
        '8': '������',
        '9': '९',
        '&': '⅋',
        '(': '{',
        ')': '}',
        '{': '(',
        '}': ')',
        'ä': 'ą' + '\u0308',
        'ö': 'օ' + '\u0308',
        'ü': 'մ' + '\u0308',
        'Ä': 'Ⱥ' + '\u0308',
        'Ö': 'ට' + '\u0308',
        'Ü': 'Ա' + '\u0308',
        'é': 'ҽ' + '\u0301',
        'á': 'ą' + '\u0301',
        'ó': 'օ' + '\u0301',
        'ú': 'մ' + '\u0301',
        'É': 'Ɛ' + '\u0301',
        'Á': 'Ⱥ' + '\u0301',
        'Ó': 'ට' + '\u0301',
        'Ú': 'Ա' + '\u0301',
        'è': 'ҽ' + '\u0300',
        'à': 'ą' + '\u0300',
        'ò': 'օ' + '\u0300',
        'ù': 'մ' + '\u0300',
        'È': 'Ɛ' + '\u0300',
        'À': 'Ⱥ' + '\u0300',
        'Ò': 'ට' + '\u0300',
        'Ù': 'Ա' + '\u0300',
        'ê': 'ҽ' + '\u0302',
        'â': 'ą' + '\u0302',
        'ô': 'օ' + '\u0302',
        'û': 'մ' + '\u0302',
        'Ê': 'Ɛ' + '\u0302',
        'Â': 'Ⱥ' + '\u0302',
        'Ô': 'ට' + '\u0302',
        'Û': 'Ա' + '\u0302'
    };
    constructor() {
        this.init();
    }
    init() {
        // invert the map
        for (const key in this.map) {
            this.map[this.map[key]] = key;
        }
    }
    encode(text) {
        let ret = '';
        for (const char of text) {
            const ch = this.map[char];
            if (typeof ch === "undefined") {
                ret += char;
            }
            else {
                ret += ch;
            }
        }
        return ret;
    }
    decode(text) {
        let ret = '';
        for (const char of text) {
            const ch = this.map[char];
            if (typeof ch === "undefined") {
                ret += char;
            }
            else {
                ret += ch;
            }
        }
        return ret;
    }
}
